@page "/cUsuarios"
@using TechTrendsAppv1.Modelos
@using TechTrendsAppv1.BLL.UsuariosServices
@using TechTrendsAppv1.BLL.RolesServices
@inject IUsuariosService usuarioService
@inject IRolesService rolesService
@rendermode InteractiveServer
@inject IToastService toast

<div class="container">
    <div class="card">
        <div class="card-header">
            <h3>Consulta de Usuarios</h3>
        </div>
        <div class="card-body">
            <form>
                <div class="input-group d-flex align-items-end">
                    <select class="form-control col-2" @bind="Filtro">
                        <option value="0">Todos</option>
                        <option value="1">Id</option>
                        <option value="2">Nombre</option>
                    </select>

                    <div class="flex-fill mx-2">
                        <label>Criterio</label>
                        <input type="text" class="form-control" @bind="Criterio" />
                    </div>

                    <button type="button" class="btn btn-warning" @onclick="Buscar">
                        <i class="oi oi-magnifying-glass mr-2" /> Buscar
                    </button>
                </div>

            </form>
        </div>
        <table class="table table-striped">
            <thead class="thead-dark">
                <tr class="table-info">
                    <th>Nombre</th>
                    <th>Email</th>
                    <th>Rol</th>
                    <th>Acci&oacute;n</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in lista)
                {
                    <tr>
                        <td>@item.Nombre</td>
                        <td>@item.Email</td>
                        <td>@item.IdRol</td>
                        <td>
                            <button class="btn btn-primary" @onclick="() => EventVer(item)">
                                <span class="material-symbols-outlined">
                                    visibility
                                </span>
                            </button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
        @if (ShowDialog)  
        {  
            <div class="modal show d-block" id="roles" tabindex="-1"role="dialog">
                <div class="modal-dialog modal-dialog-centered">
                    <div class="modal-content">  
                        <div class="modal-header">  
                            <h5 class="modal-title" id="lbl">Actualizar rol de Usuario</h5>  
                            <button type="button" class="close" @onclick="OcultarDialogo"  
                            data-dismiss="modal" aria-label="Close">  
                                <span aria-hidden="true">X</span>  
                            </button>  
                        </div>  
                        <div class="modal-body">
                            <div class="form-row align-items-center">
                                <div class="col" style="margin-bottom:2rem;">
                                    <div class="form-group">
                                        <label>Usuario</label>
                                        <div class="input-group">
                                            <InputText class="form-control col-4" @bind-Value="usuarioSeleccionado.Nombre" disabled="true"/>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="form-group">
                                <label>Rol</label>
                                <div class="input-group">
                                
                                    <InputSelect id="roles" @bind-Value="usuarioSeleccionado.IdRol" class="form-control col-4">
                                        @foreach(var item in roles){
                                            <option value="@item.IdRol">@item.Nombre</option>
                                        }
                                    </InputSelect>
                                </div>
                            </div>
                        </div>  
                         <div class="modal-footer">
                            <button type="button" @onclick="Modificar" class="btn btn-primary">Actualizar</button>
                            <button type="button" class="btn btn-secondary" 
                            @onclick="OcultarDialogo" data-dismiss="modal">Cerrar</button>
                        </div>
                    </div>  
                </div>  
            </div>  
        }
    </div>
</div>


@code {
    public int Id { get; set; }
    public string Filtro { get; set; }
    public string Criterio { get; set; }
    private bool ShowDialog = false;
    public List<Usuarios> lista { get; set; } = new List<Usuarios>();
    public Usuarios usuarioSeleccionado { get; set; } = new Usuarios();
    public Usuarios Aux { get; set; } = new Usuarios();
    private List<Roles> roles = new List<Roles>();
    protected override async Task OnInitializedAsync()
    {
        roles = await rolesService.GetRolesAsync();
        await base.OnInitializedAsync();
    }

    private async Task EventVer(Usuarios usuario)
    {
        ShowDialog = true;
        usuarioSeleccionado = usuario;
    }

    void OcultarDialogo()
    {
        ShowDialog = false;
    }

    private async void Modificar()
    {
        if(usuarioSeleccionado.Rol != null)
        {
            usuarioSeleccionado.IdRol = usuarioSeleccionado.IdRol;
            var estado = await usuarioService.ModificarUsuario(usuarioSeleccionado);
            await Buscar();
            if (estado)
            {
                ShowDialog = false;
                toast.ShowSuccess("El usuario se actualizo correctamente");
            }
            else
            {
                toast.ShowError("El usuario no se actualizo");
            }
        }
    }

    private async Task Buscar()
    {
        lista = new List<Usuarios>();


        if (Criterio != null)
        {
            switch (Filtro)
            {
                case "0":
                    lista = await usuarioService.GetUsuarios();
                    break;
                case "1":
                    lista = await usuarioService.GetListAsync(t => t.IdUsuario == int.Parse(Criterio));
                    break;

                case "2":
                    lista = await usuarioService.GetListAsync(t => t.Nombre.Contains(Criterio));
                    break;
            }
        }
        else
        {
            lista = await usuarioService.GetListAsync(x => true);
        }
    }
}
