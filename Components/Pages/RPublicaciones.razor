@page "/rPublicaciones"
@page "/rPublicaciones/{parametro:int}"
@using TechTrendsAppv1.BLL.EstadosService
@using TechTrendsAppv1.BLL.EtiquetasService
@using TechTrendsAppv1.Modelos
@using TechTrendsAppv1.BLL.PublicacionesServices
@inject IPublicacionesService publicacionService
@inject IEtiquetasService etiquetaService
@inject IEstadosService estadosService
@inject IToastService toast
@rendermode InteractiveServer

<EditForm Model="publicaciones" OnValidSubmit="Guardar">
    <div class="card">
        <div class="card-header">
            <h3>Registrar publicaci&oacute;n</h3>
        </div>
        <div class="card-body">
            <form>
                <div class="form-row align-items-center">
                    <div class="col" style="margin-bottom:2rem;">
                        <div class="form-group">
                            <label>Id Publicaci&oacute;n</label>
                            <div class="input-group">
                                <InputNumber @bind-Value="publicaciones.IdPublicacion" class="form-control col-4" />
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-6">

                            <label>Etiqueta</label>
                            <InputSelect class="form-control col-4" id="etiquetas" @bind-Value="publicaciones.IdEtiqueta">
                                @foreach (var item in etiquetas)
                                {
                                    <option value="@item.IdEtiqueta">@item.Nombre</option>
                                }
                            </InputSelect>
                        
                        </div>
                        <div class="col-6">
                            <label>Estado</label>
                            <InputSelect class="form-control col-4" id="estados" @bind-Value="publicaciones.IdEstado">
                                @foreach (var item in estados)
                                {
                                    <option value="@item.IdEstado">@item.Nombre</option>
                                }
                            </InputSelect>
                        </div>
                    </div>
                    <div class="form-group">
                        <label>T&iacute;tulo</label>
                        <InputText class="form-control" @bind-Value="publicaciones.Titulo" />
                    </div>
                    <div class="form-group">
                        <label>Autor</label>
                        <InputText class="form-control" @bind-Value="publicaciones.Autor" />
                    </div>
                    <div class="form-group">
                        <label>Contenido</label>
                        <textarea class="form-control" cols="40" rows="8" @bind="publicaciones.Contenido" />
                    </div>
                    <div class="form-group">
                        <InputCheckbox class="form-check" @bind-Value="publicaciones.Visibilidad" />
                        Visible para el p&uacute;blico
                    </div>

                    <div class="form-group" style="margin-top:2rem;">
                        <label>Imagen</label>
                        <InputFile class="file-input" OnChange="(e) => {OnInputFileChange(e);}" />
                    </div>
                    <div class="row">
                        <img style="height:100px; width:100px" src="@imgUrl" />
                    </div>
                </div>
            </form>
        </div>
        <div class="card-footer">
            <div class="form-group text-center" display: inline-block>
                <button @onclick="Nuevo" type="button" class="btn btn-lg btn-primary">Nuevo</button>
                <button type="submit" class="btn btn-lg btn-success">Guardar</button>
                <button type="button" class="btn btn-lg btn-danger">Eliminar</button>
                <button type="button" class="btn btn-lg btn-light">Guardar como plantilla</button>
            </div>
        </div>
    </div>
</EditForm>

@code {
    [Parameter]
    public int parametro { get; set; }
    public Publicaciones publicaciones { get; set; } = new();
    public List<Etiquetas> etiquetas { get; set; } = new List<Etiquetas>();
    public List<Estados> estados { get; set; } = new List<Estados>();
    public string imgUrl { get; set; } = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        etiquetas = await etiquetaService.GetEtiquetas();
        estados = await estadosService.GetEstados();
        if (parametro > 0)
        {
            await Buscar(parametro);
        }
        else
        {
            await Nuevo();
        }
    }
    private async Task Buscar(int id)
    {
        if (id > 0)
        {
            var encontrado = await publicacionService.GetPublicacion(id);
            if (encontrado != null)
            {
                this.publicaciones = encontrado;
                await DesconvertirImagen(publicaciones.Audiovisual);
            }
            else
            {
                await Nuevo();
                toast.ShowWarning($"No se ha encontrado la publicacion con el id ingresado");
            }
        }
    }

    async Task OnInputFileChange(InputFileChangeEventArgs archivo)
    {
        if (archivo != null)
        {
            var ms = new MemoryStream();
            await archivo.File.OpenReadStream().CopyToAsync(ms);
            publicaciones.Audiovisual = ms.ToArray();
        }
    }

    async Task DesconvertirImagen(byte[] imagen)
    {
        imgUrl = "data:image/png;base64, " + Convert.ToBase64String(imagen);
    }

    private async Task Nuevo()
    {
        publicaciones = new Publicaciones();
        imgUrl = string.Empty;
    }


    private async Task Guardar()
    {
        publicaciones.IdEstado = 1;
        publicaciones.IdEtiqueta = 1;
        var guardado = await publicacionService.Guardar(publicaciones);
        if (guardado)
        {
            await Nuevo();
            toast.ShowInfo("La publicacion se guardo correctamente");
        }
        else
        {
            toast.ShowWarning("La publicacion no se guardo");
        }
    }
}
