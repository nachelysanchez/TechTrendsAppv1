@layout Login
@page "/Login"

@using TechTrendsAppv1.Modelos
@inject NavigationManager navManager
@using TechTrendsAppv1.BLL.UsuariosServices
@inject IUsuariosService userService
@rendermode RenderMode.InteractiveServer

<div class="container">
    <div class="container_content">
        <h2>TechTrends</h2>
        <h3>¡Bienvenido de nuevo!</h3>
        <h1>Log In</h1>

        <form>
            <label>Email</label>
            <div class="input_row">
                <input type="email" @bind-value="login.Correo" placeholder="Ingresa tu e-mail" />
            </div>
            <div class="input_header">
                <label>Contrase&ntilde;a</label>
                <a href="#">¿Olvidaste tu contrase&ntilde;a?</a>
            </div>
            <div class="input_row">
                <input type="@tipo" id="password" @bind-value="login.Clave" placeholder="Contraseña" />
                <span id="password-eye" @onclick="TogglePasswordVisibility">
                    <i class="material-symbols-outlined">
                        @if (showPassword == false)
                        {
                            propiedad = "visibility_off";
                            tipo = "text";
                        }
                        else
                        {
                            propiedad = "visibility";
                            tipo = "password";
                        }
                        @propiedad;
                    </i>
                </span>
            </div>
            <label>@mensaje</label>
        </form>
        <button @onclick="LoginAction">Ingresar</button>

        <h6>O contin&uacute;a con</h6>
        <div class="logins">
            <a href="#"><img src="/images/LogoGoogle.png" alt="google" /></a>
            <a href="#"><img src="/images/LogoFacebook.png" alt="facebook" /></a>
        </div>
        <p>¿No tienes una cuenta todav&iacute;a? <a href="#">¡Registrate gratis!</a></p>

    </div>
</div>

@code {
    private LoginDto login = new();
    private Usuarios user = new();
    private string mensaje = string.Empty, propiedad = "visibility_off", tipo = "password";
    private bool showPassword = false;

    protected override Task OnInitializedAsync()
    {
        var usuario = userService.GetUsuarioLogueado();
        if (usuario != null)
        {
            userService.CerrarSesion();
            //navManager.NavigateTo("/Perfil");
        }
        return base.OnInitializedAsync();
    }

    private async Task LoginAction()
    {
        user = await userService.Login(login.Correo, login.Clave);
        if (user != null)
        {

            navManager.NavigateTo("/Home");
        }
        else
        {
            this.OnInitialized();
            mensaje = "Correo o contraseña incorrecta";
        }
    }
    private void TogglePasswordVisibility()
    {
        showPassword = !showPassword;
    }
}
